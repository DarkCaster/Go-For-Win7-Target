name: Go Build, Test and Publish Artifacts
on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Install package
      run: sudo apt-get -y install wget

    - name: Build
      run: ./build.sh

    - name: Create Archive
      run: cd build && tar -czvf go.tar.gz --owner=0 --group=0 go

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-binaries
        include-hidden-files: true
        path: build/go.tar.gz

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Build
      shell: pwsh
      run: .\build.ps1

    - name: Create Archive
      if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
      run: cd build && 7z a -tzip -mx=9 go.zip go

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-binaries
        include-hidden-files: true
        path: build/go.zip

  release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download linux artefacts
      if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
      uses: actions/download-artifact@v4
      with:
        name: linux-binaries
        path: dist-linux

    - name: Download windows artefacts
      if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
      uses: actions/download-artifact@v4
      with:
        name: windows-binaries
        path: dist-windows

    - name: Set VERSION variable from tag
      run: echo "VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')" >> $GITHUB_ENV
    - name: Show VERSION
      run: echo "VERSION=${VERSION}"

    - name: Set archive name (linux)
      if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
      run: cd dist-linux && mv go.tar.gz go${VERSION}.linux-amd64.tar.gz

    - name: Set archive name (windows)
      if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
      run: cd dist-windows && mv go.zip go${VERSION}.windows-386.zip

    - name: Publish release
      if: ${{ startsWith(github.event.ref, 'refs/tags/v') }}
      uses: ncipollo/release-action@v1
      with:
        prerelease: true
        allowUpdates: true
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        omitPrereleaseDuringUpdate: true
        artifacts: dist-windows/*.zip, dist-linux/*.tar.gz
